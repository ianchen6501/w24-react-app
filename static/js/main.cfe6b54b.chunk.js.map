{"version":3,"sources":["utils.js","WebAPI.js","redux/reducers/postReducer.js","components/AllPosts/Post.js","components/Loading/Loading.js","components/AllPosts/AllPosts.js","components/SelectedPosts/SelectedPosts.js","pages/HomePage/HomePage.js","pages/AboutPage/AboutPage.js","components/Form/Form.js","redux/reducers/userReducer.js","pages/LoginPage/LoginPage.js","hooks/useHandleLogin.js","pages/NewPostPage/NewPostPage.js","hook.js","pages/SinglePostPage/SinglePostPage.js","hooks/useHandleRegister.js","pages/RegisterPage/RegisterPage.js","pages/EditPostPage/EditPostPage.js","pages/ListPage/ListPage.js","components/Header/Header.js","components/Footer/Footer.js","components/App/App.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthTokenToLocalStorage","token","localStorage","setItem","JSON","stringify","getAuthTokenFromLocalStorage","parse","getItem","deleteAuthTokenFromLocalStorage","removeItem","BASE_URL","getPosts","fetch","then","res","json","getMe","headers","deletePostById","event","id","Number","target","getAttribute","method","postReducer","createSlice","name","initialState","isLoadingPost","isLoadingNewPost","isLoadingPatchedPost","post","posts","selectedPosts","newPostResponse","patchPostResponse","reducers","setIsLoadingPost","state","action","payload","setIsLoadingNewPost","setIsLoadingPatchedPost","setPost","setPosts","setSelectedPosts","setNewPostResponse","setPatchPostResponse","actions","getPost","dispatch","getPostsById","catch","error","console","log","toString","getSelectedPosts","data","limit","page","getPostsByLimit","createPost","title","body","submitPost","response","patchPost","patchPostById","PostContainer","styled","div","props","theme","primary_colors","green","black","PostTitle","Link","PostDate","DeleteButton","button","light_black","EditButton","PostRightContainer","Post","useDispatch","userData","useSelector","store","users","to","Date","createdAt","toLocaleDateString","onClick","a","lot","deletePost","Section","fontSizes","h3","Loading","Container","AllPosts","allPosts","useEffect","length","map","PageControlerContainer","ul","PagesContainer","Page","li","$active","Previous","Next","PageControler","setCurrentPage","currentPage","useState","paginateArray","setPaginateArray","pagesNumber","setPagesNumber","parseInt","array","i","push","index","handleSwitchPage","SelectedPosts","HomePage","Banner","isMouseOver","Body","AboutPage","setIsMouseOver","isBodyShow","setIsBodyShow","onMouseOver","setTimeout","ErrorMessage","Form","form","InputContainer","Button","UserInput","input","NewPostContainer","Input","Textarea","textarea","userReducer","isLoadingAuthToken","authTokenResponse","setIsLoadingAuthToken","setAuthTokenResponse","setUserData","getAuthToken","loginData","username","password","login","getUserData","ok","message","LoginPage","setUsername","setPassword","errorMessage","setErrormessage","history","useHistory","handleLogin","preventDefault","result","useHandleLogin","onSubmit","type","value","onChange","e","NewPostPage","setTitle","setBody","setErrorMessage","prevIsLoadingNewPost","ref","useRef","current","usePrevious","rows","SinglePostContainer","TitleContainer","TitleRightContainer","Title","CreatedAt","useParams","toLocaleTimeString","useHandleRegister","nickname","setNickname","handleRegister","register","RegisterPage","EditPostPage","placeholder","goBack","HeaderContainer","Brand","NavbarList","Nav","LeftContainer","Header","location","useLocation","as","pathname","Footer","App","isLoadinGetMe","setIsLoadinGetMe","useLayoutEffect","exact","path","configureStore","reducer","ReactDOM","render","colors","light_gray","dim_green","h1","h2","h4","h5","h6","document","getElementById"],"mappings":"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","file":"static/js/main.cfe6b54b.chunk.js","sourcesContent":["const TOKEN_NAME = 'token'\r\n\r\nexport const setAuthTokenToLocalStorage = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, JSON.stringify(token))\r\n}\r\n\r\nexport const getAuthTokenFromLocalStorage = () => {\r\n  return JSON.parse(localStorage.getItem(TOKEN_NAME))\r\n}\r\n\r\nexport const deleteAuthTokenFromLocalStorage = () => {\r\n  return localStorage.removeItem('token')\r\n}\r\n\r\n","import { getAuthTokenFromLocalStorage } from './utils'\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=id&_order=desc`).then((res) => res.json())\r\n}\r\n\r\nexport const getPostsById = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json())\r\n}\r\n\r\nexport const getPostsByLimit = (limit, page) => {\r\n  return fetch(`${BASE_URL}/posts?_limit=${limit}&_page=${page}&_sort=id&_order=desc`).then((res) => res.json())\r\n}\r\n\r\nexport const login = (userData) => {\r\n  const username = userData.username\r\n  const password = userData.password\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const register = (username, password, nickname) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const getMe = (token) => {\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      'authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const submitPost = (data) => {\r\n  const token = getAuthTokenFromLocalStorage()\r\n  const title = data.title\r\n  const body = data.body\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const deletePostById = (event) => {\r\n  const id = Number(event.target.getAttribute('id'))\r\n  const token = getAuthTokenFromLocalStorage()\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const patchPostById = (id, data) => {\r\n  const token = getAuthTokenFromLocalStorage()\r\n  const title = data.title\r\n  const body = data.body\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\nimport { getPostsById, getPosts, deletePostById, submitPost, patchPostById, getPostsByLimit } from '../../WebAPI'\n\nexport const postReducer = createSlice({\n  name: 'posts',\n  initialState: {\n    isLoadingPost : false,\n    isLoadingNewPost : false,\n    isLoadingPatchedPost : false,\n    post : [],\n    posts : [],\n    selectedPosts : [],\n    newPostResponse : null,\n    patchPostResponse : null,\n  },\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload\n    },\n\n    setIsLoadingNewPost: (state, action) => {\n      state.isLoadingNewPost = action.payload\n    },\n\n    setIsLoadingPatchedPost: (state, action) => {\n      state.isLoadingNewPost = action.payload\n    },\n\n    setPost: (state, action) => {\n      state.post = action.payload\n    },\n\n    setPosts: (state, action) => {\n      state.posts = action.payload\n    },\n\n    setSelectedPosts: (state, action) => {\n      state.selectedPosts = action.payload\n    },\n\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload\n    },\n\n    setPatchPostResponse: (state, action) => {\n      state.patchPostResponse = action.payload\n    }\n  },\n});\n\nexport const { \n  setIsLoadingPost, \n  setIsLoadingNewPost,\n  setIsLoadingPatchedPost,\n  setPost, \n  setPosts, \n  setSelectedPosts,\n  setNewPostResponse,\n  setPatchPostResponse\n} = postReducer.actions;\n\n//redux-thunk\nexport const getPost = (id) => (dispatch) => { \n  dispatch(setIsLoadingPost(true))\n  getPostsById(id)\n  .then(res => {\n    dispatch(setPost(res))\n    dispatch(setIsLoadingPost(false))\n  })\n  .catch(error => {\n    console.log(error.toString())\n  })\n};\n\nexport const getAllPosts = () => (dispatch) => { \n  dispatch(setIsLoadingPost(true))\n  getPosts()\n  .then(res => {\n    dispatch(setPosts(res))\n    dispatch(setIsLoadingPost(false))\n  })\n  .catch(error => {\n    console.log(error.toString())\n  })\n};\n\nexport const getSelectedPosts = (data) => (dispatch) => { \n  const limit = data.limit\n  const page = data.page\n  dispatch(setIsLoadingPost(true))\n  getPostsByLimit(limit, page)\n  .then(res => {\n    dispatch(setSelectedPosts(res))\n    dispatch(setIsLoadingPost(false))\n  })\n  .catch(error => {\n    console.log(error.toString())\n  })\n};\n\nexport const deletePost = (event) => async (dispatch) => { \n  await deletePostById(event)\n  .then(() => {\n    console.lot('delete success')\n  })\n  .catch(error => {\n    console.log(error.toString())\n  })\n  dispatch(setIsLoadingPost(true))\n  getPosts()\n  .then(res => {\n    dispatch(setPosts(res))\n    dispatch(setIsLoadingPost(false))\n  })\n  .catch(error => {\n    console.log(error.toString())\n  })\n};\n\nexport const createPost = (data) => (dispatch) => {\n  dispatch(setIsLoadingNewPost(true))\n  return submitPost(data)\n  .then(response => {\n    dispatch(setNewPostResponse(response))\n    dispatch(setIsLoadingNewPost(false))\n    return response\n  })\n}\n\nexport const patchPost = (id, data) => (dispatch) => {\n  dispatch(setIsLoadingPatchedPost(true))\n  return patchPostById(id, data)\n  .then(response => {\n    dispatch(setPatchPostResponse(response))\n    dispatch(setIsLoadingPatchedPost(false))\n    return response\n  })\n}\n\nexport default postReducer.reducer; \n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deletePost } from '../../redux/reducers/postReducer'\n\nconst PostContainer = styled.div `\n  position: relative;\n  border-bottom: 1px solid ${props => props.theme.primary_colors.green};\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  background: ${props => props.theme.primary_colors.black};\n  width: 80%;\n  left: 50%;\n  transform: translate(-50%, 0);\n  transition: padding 0.3s;\n  \n  &:hover {\n    padding: 16px 20px;\n  }\n`\n\nconst PostTitle = styled(Link) `\n  font-size: 24px;\n  text-decoration: none;\n  color: ${props => props.theme.primary_colors.green};\n`\n\nconst PostDate = styled.div `\n  color: ${props => props.theme.primary_colors.green};\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n`\n\nconst DeleteButton = styled.button `\n  padding: 10px;\n  margin-left: 20px;\n  border: none;\n  border-radius: 6px;\n  background: ${props => props.theme.primary_colors.light_black};\n  color:  ${props => props.theme.primary_colors.green};\n  transform: background 0.1s, color 0.1s;\n\n  &:hover {\n    background: white;\n    color: black;\n  }\n`\n\nconst EditButton = styled.button `\n  padding: 10px;\n  margin-left: 20px;\n  border: none;\n  border-radius: 6px;\n  background: ${props => props.theme.primary_colors.light_black};\n  color:  ${props => props.theme.primary_colors.green};\n  transform: background 0.1s, color 0.1s;\n\n  &:hover {\n    background: white;\n    color: black;\n  }\n`\n\nconst PostRightContainer = styled.div `\n  display: flex;\n`\n\nexport default function Post({post}) {\n  const dispatch = useDispatch()\n  const userData = useSelector(store => store.users.userData)\n\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.id}{' . '}{post.title}</PostTitle>\n      <PostRightContainer>\n        <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\n        { userData && <DeleteButton onClick={(event) => dispatch(deletePost(event)) } id={post.id}>Delete</DeleteButton> }\n        { userData && <Link to={`/edit-post/${post.id}`}><EditButton>Edit</EditButton></Link> }\n      </PostRightContainer>\n    </PostContainer>\n  )\n}\n\nPost.propTypes = {\n  post: PropTypes.object\n}\n\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Section = styled.div `\n  background: ${props => props.theme.primary_colors.green};\n  position: relative;\n  witdh: 100%;\n  min-height: 100%;\n  font-size: ${props => props.theme.fontSizes.h3};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 0;\n  color: ${props => props.theme.primary_colors.black}\n`\n\nexport default function Loading() {\n\n  return (\n    <Section>Is Loading!</Section>\n  )\n}\n\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllPosts } from '../../redux/reducers/postReducer'\nimport Post from './Post'\nimport Loading from '../Loading'\n\nexport const Container = styled.div `\n  position: relative;\n  background: ${props => props.theme.primary_colors.green};\n  min-height: 100%;\n  z-index: 1;\n  margin: 0 auto;\n  box-sizing: border-box;\n  padding-top: 30px;\n  padding-bottom: 80px;\n\n`\n\nexport default function AllPosts() {\n  const dispatch = useDispatch()\n  const allPosts = useSelector(store => store.posts.posts)\n  \n  useEffect(() => {\n    dispatch(getAllPosts())\n  }, [dispatch])\n\n  if(allPosts.length === 0){\n    return ( \n      <Loading />\n    )\n  }\n\n  return (\n    <Container>\n        { allPosts.map(post => \n          <Post post={post} key={post.id}></Post>)\n        }\n    </Container>\n  )\n}\n\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSelectedPosts } from '../../redux/reducers/postReducer'\nimport Post from '../../components/AllPosts/Post'\nimport Loading from '../Loading'\nimport { getPosts } from '../../WebAPI'\nimport { Container } from '../../components/AllPosts/AllPosts'\nimport PropTypes from 'prop-types'\n\nconst PageControlerContainer = styled.ul `\n  margin: 20px auto;\n  width: 25vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style-type: none;\n  text-align: center;\n  padding: 0px;\n`\n\nconst PagesContainer = styled.ul `\n  transform: translate(0px, 4px);\n  display: flex;\n  align-items: center;\n  list-style-type: none;\n  padding: 0px 10px;\n`\n\nconst Page = styled.li `\n  font-size: 20px;\n  cursor: pointer;\n  color: ${props => props.theme.primary_colors.black};\n  box-sizing: border-box;\n  width: 30px;\n  height: 30px;\n  border-radius: 30px;\n  vertical-align: basement;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${props => props.$active && `\n    border: solid 2px ${props.theme.primary_colors.black};\n  `}\n`\n\nconst Previous = styled.li `\n  font-size: 40px;\n  cursor: pointer;\n  color: ${props => props.theme.primary_colors.black};\n`\n\nconst Next = styled.li `\n  font-size: 40px;\n  cursor: pointer;\n  color: ${props => props.theme.primary_colors.black};\n`\n\nfunction PageControler({setCurrentPage, currentPage, limit}) {\n  const [paginateArray, setPaginateArray] = useState([])\n  const [pagesNumber, setPagesNumber] = useState(null)\n\n  useEffect(() => {\n    getPosts()\n    .then(res => {\n      const length = res.length\n      const pagesNumber = length%limit? parseInt(length/limit)+1 : parseInt(length/limit)\n      setPagesNumber(pagesNumber)\n      const array = []\n      for(let i=1; i<=pagesNumber; i++) {\n        array.push(i)\n      }\n      setPaginateArray(array)\n    })\n  }, [limit])\n\n  function handleSwitchPage(page) {\n    setCurrentPage(page)\n  }\n\n  function handlePrevious() {\n    setCurrentPage(currentPage - 1)\n  }\n\n  function handleNext() {\n    setCurrentPage(currentPage + 1)\n  }\n\n  return (\n    <PageControlerContainer>\n      { currentPage !== 1 && (\n        <Previous onClick={handlePrevious}>&#x025C2;</Previous>\n      )}\n      <PagesContainer>\n        {\n          paginateArray.map((page,index) => <Page onClick={() => handleSwitchPage(page)} key={index} $active={currentPage === index + 1 }>{page}</Page>)\n        }\n      </PagesContainer>\n      { currentPage !== pagesNumber && (\n        <Next onClick={handleNext}>&#x025B8;</Next>\n      )}\n    </PageControlerContainer>\n  )\n}\n\nPageControler.propTypes = {\n  setCurrentPage: PropTypes.func,\n  currentPage: PropTypes.number,\n  limit: PropTypes.number\n}\n\nexport default function SelectedPosts() {\n  const [currentPage, setCurrentPage] = useState(1)\n  const dispatch = useDispatch()\n  const selectedPosts = useSelector(store => store.posts.selectedPosts)\n  const posts = useSelector(store => store.posts.posts)\n  const limit = 5\n  \n  useEffect(() => {\n    dispatch(getSelectedPosts({\n      limit,\n      page: currentPage,\n    }))\n  }, [dispatch, currentPage, posts])\n\n  if(selectedPosts.length === 0){\n    return ( \n      <Loading />\n    )\n  }\n\n  return (\n    <Container>\n      { selectedPosts.map(post => \n        <Post post={post} key={post.id}></Post>)\n      }\n      <PageControler setCurrentPage={setCurrentPage} currentPage={currentPage} limit={limit}/>\n    </Container>\n  )\n}\n\n","import React from 'react'\nimport SelectedPosts from '../../components/SelectedPosts'\n\nexport default function HomePage() {\n  return (\n    <SelectedPosts />\n  )\n}\n\n","import React from 'react'\nimport { useState } from 'react/cjs/react.development'\nimport styled from 'styled-components'\n\nconst Container = styled.div `\n  min-height: 100%;\n  height: 100%;\n`\n\nconst Banner = styled.div `\n  left: 50%;\n  top: 30vh;\n  width: 200px;\n  position: relative;\n  transform: translate(-50%, 50%);\n  text-align: center;\n  font-size: 26px;\n  padding: 15px;\n  border: solid 2px ${props => props.theme.primary_colors.black};\n  border-radius: 50px;\n  transition: top 0.1s;\n\n  ${props => props.isMouseOver && `top: 20vh;`}\n`\n\nconst Body = styled.div `\n  position: relative;\n  width: 500px;\n  top: 30%;\n  font-size: 20px;\n  line-height: 40px;\n  left: 50%;\n  transform: translate(-20%, 0%);\n`\n\n\nexport default function AboutPage() {\n  const [isMouseOver, setIsMouseOver] = useState(false)\n  const [isBodyShow, setIsBodyShow] = useState(false)\n\n  function handleOnMouseOver() {\n    setIsMouseOver(true)\n    setTimeout(() => setIsBodyShow(true), 100)\n  }\n\n  return (\n    <Container>\n      <Banner onMouseOver={() => handleOnMouseOver()} isMouseOver={isMouseOver}>關於我們</Banner>\n      {isBodyShow && (\n        <Body>enjoy writting!<br />\n          這是一個大家集體創作的部落格。<br />\n          你可以在這邊自由註冊、發文並觀看別人的文章。\n        </Body>\n      )}\n    </Container>\n  )\n}\n","import styled from 'styled-components'\n\n//login && register\nexport const ErrorMessage = styled.div `\n  color: ${props => props.theme.primary_colors.light_black};\n  font-size: 20px;\n  font-weight: bold;\n  position: relative;\n  text-align: center;\n  margin-top: 10px;\n`\n\nexport const Container = styled.div `\n  box-sizing: border-box;\n  min-height: 100%;\n  padding-top: 64px;\n  padding-bottom: 50px;\n`\n\nexport const Form = styled.form `\n  position: relative;\n  left: 50%;\n  transform: translate(-50%,0px);\n  width: fit-content;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  border-radius: 5px;\n  border: solid 2px ${props => props.theme.primary_colors.black};\n  padding: 0px 20px 20px 20px;\n`\n\nexport const InputContainer = styled.div `\n  padding-top: 10px;\n  padding-bottom: 10px;\n`\n\nexport const Button = styled.button `\n  padding: 10px;\n  border: none;\n  border-radius: 6px;\n  font-size: 16px;\n  background: ${props => props.theme.primary_colors.light_black};\n  color:  ${props => props.theme.primary_colors.green};\n  transform: background 0.1s, color 0.1s;\n\n  &:hover {\n    background: white;\n    color: black;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nexport const UserInput = styled.input `\n  height: 30px;\n  width: 100%;\n  border: solid 1px ${props => props.theme.primary_colors.black};\n  border-radius: 3px;\n  font-size:20px;\n  margin-top:10px;\n`\n\n//editPost && newPost\nexport const NewPostContainer = styled.div `\n  height: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n\n  &:nth-child(3) {\n    width:100px;\n  }\n`\n\nexport const Section = styled.div `\n  display: block;\n  width: 90vw;\n`\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 40px;\n  border: solid 2px ${props => props.theme.primary_colors.black};\n  border-radius: 3px;\n  font-size:20px;\n`\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  border: solid 2px ${props => props.theme.primary_colors.black};\n  border-radius: 3px;\n  font-size:20px;\n  margin-bottom: 20px;\n`\n","import { createSlice } from '@reduxjs/toolkit';\nimport { login, getMe } from '../../WebAPI'\nimport { deleteAuthTokenFromLocalStorage } from '../../utils'\n\nexport const userReducer = createSlice({\n  name: 'users',\n  initialState: {\n    isLoadingAuthToken: false,\n    authTokenResponse: null,\n    userData: null,\n  },\n  reducers: {\n    setIsLoadingAuthToken: (state, action) => {\n      state.isLoadingAuthToken = action.payload\n    },\n    setAuthTokenResponse: (state, action) => {\n      state.authTokenResponse = action.payload\n    },\n    setUserData: (state, action) => {\n      state.userData = action.payload\n    }\n  },\n});\n\nexport const { \n  setIsLoadingAuthToken,\n  setAuthTokenResponse,\n  setUserData\n} = userReducer.actions;\n\n//redux-thunk\nexport const getAuthToken = (loginData) => (dispatch) => { \n  dispatch(setIsLoadingAuthToken(true))\n  return login(loginData)\n  .then(response => {\n    dispatch(setAuthTokenResponse(response))\n    dispatch(setIsLoadingAuthToken(false))\n    return response\n  })\n};\n\nexport const getUserData = (token) => (dispatch) => {\n  return getMe(token)\n  .then(response => {\n    if(response.ok !== 1) {\n      deleteAuthTokenFromLocalStorage()\n      return response.message\n    }\n    dispatch(setUserData(response.data))\n  })\n}\n\n\nexport default userReducer.reducer; \n","import React from 'react'\nimport {\n  ErrorMessage,\n  Container,\n  Form,\n  InputContainer,\n  Button,\n  UserInput\n} from '../../components/Form'\nimport useHandleLogin from '../../hooks/useHandleLogin'\n\nexport default function LoginPage() {\n  const {\n    username,\n    setUsername,\n    password,\n    setPassword,\n    errorMessage,\n    handleLogin\n  } = useHandleLogin()\n\n  return (\n    <Container>\n      <Form onSubmit={handleLogin}>\n        <InputContainer>\n          username:{' '}\n          <UserInput type='text' value={username} onChange={(e) => setUsername(e.target.value)}></UserInput>\n        </InputContainer>\n        <InputContainer>\n          password:{' '}\n          <UserInput type='password' value={password} onChange={(e) => setPassword(e.target.value)}></UserInput>\n        </InputContainer>\n        <Button>登入</Button>\n      </Form>\n      { errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage> }\n    </Container>\n  )\n}","import { useState } from 'react'\r\nimport { setAuthTokenToLocalStorage } from '../utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { getAuthToken, getUserData } from '../redux/reducers/userReducer'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function useHandleLogin() {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrormessage] = useState('')\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogin = (event) => {\r\n    setErrormessage(null) \r\n    event.preventDefault()\r\n    if(!username || !password){\r\n      return setErrormessage('請輸入相關資訊')\r\n    }\r\n    dispatch(getAuthToken({username, password}))\r\n    .then(response => {\r\n      if(response.ok !== 1) {\r\n        setErrormessage(response.message)\r\n      }\r\n      setAuthTokenToLocalStorage(response.token)\r\n      dispatch(getUserData(response.token))\r\n      .then(result => {\r\n        if(result){\r\n          return setErrormessage(result.toString())\r\n        }\r\n        history.push('/')\r\n      })\r\n    })\r\n  }\r\n\r\n  return {\r\n    username,\r\n    setUsername,\r\n    password,\r\n    setPassword,\r\n    errorMessage,\r\n    setErrormessage,\r\n    handleLogin\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { createPost } from '../../redux/reducers/postReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport usePrevious from '../../hook'\nimport {\n  NewPostContainer,\n  Section,\n  Input,\n  Textarea,\n  Button,\n  ErrorMessage\n} from '../../components/Form'\n\nexport default function NewPostPage() {\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const isLoadingNewPost = useSelector(store => store.posts.isLoadingNewPost)\n  const newPostResponse = useSelector(store => store.posts.newPostResponse)\n  const prevIsLoadingNewPost = usePrevious(isLoadingNewPost)\n\n  function handleSubmit() {\n    if(title === '' || body === '') {\n      return setErrorMessage('請輸入資料')\n    }\n    dispatch(createPost({title, body})) //return promise\n  }\n\n  // 1. request 之前，isLoadingNewPost: false , prevIsLoadingNewPost: false\n  // 2. request 時，isLoadingNewPost: true , prevIsLoadingNewPost: false\n  // 3. request 後，isLoadingNewPost: false , prevIsLoadingNewPost: true\n\n  useEffect(() => { //方法三，用 state 來判斷\n    if(!isLoadingNewPost && prevIsLoadingNewPost)\n    if(newPostResponse && newPostResponse.id) {\n      history.push('./posts/'+ newPostResponse.id)\n    }\n  }, [newPostResponse, history, isLoadingNewPost, prevIsLoadingNewPost])\n\n  // useEffect(() => { //方法一，再下一次進來前清空 newpostresponse\n  //   return dispatch(setNewPostResponse(null))\n  // }, [])\n\n  // useEffect(() => { //會有一個 side effect 之後進來 newPostResponse 還在，會導向該文章\n  //   if(newPostResponse && newPostResponse.id) {\n  //     history.push('./posts/'+ newPostResponse.id)\n  //   }\n  // }, [newPostResponse, history])\n\n  return (\n    <NewPostContainer>\n      <Section>\n        <h2>Title</h2>\n        <Input value={title} onChange={(event) => {setTitle(event.target.value)}}></Input>\n      </Section>\n      <Section>\n        <h2>Body</h2>\n        <Textarea value={body} onChange={(event) => {setBody(event.target.value)}} rows='4'></Textarea>\n      </Section>\n      <Button onClick={handleSubmit}>Submit</Button>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n    </NewPostContainer>\n  )\n}\n","import { useRef, useEffect } from 'react'\r\n\r\n// usePrevious\r\nexport default function usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef();\r\n  \r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n  \r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { useParams } from 'react-router-dom'\nimport { getPost, setPost } from '../../redux/reducers/postReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loading from '../../components/Loading'\nimport { Link } from 'react-router-dom'\n\n\nNewPostPage.propTypes = {\n  post: PropTypes.object\n}\n\nconst SinglePostContainer = styled.div `\n  height: 100%;\n  box-sizing: border-box;\n  padding-top: 64px;\n  padding-bottom: 50px;\n  width: 70vw;\n  margin: 0 auto;\n`\n\nconst TitleContainer = styled.div `\n  margin-top: 30px;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst TitleRightContainer = styled.div `\n  display: flex;\n`\n\nconst Title = styled.div `\n  font-weight: bold;\n  font-size: 26px;\n  vertical-align: baseline;\n`\n\nconst CreatedAt = styled.div `\n  font-size: 20px;\n  color: rgb(0,0,0,0.6);\n  display: flex;\n  align-items: center;\n`\n\nconst Body = styled.div `\n  margin-top: 10px;\n  padding-top: 20px;\n  border-top: solid 0.5px rgb(0,0,0,0.3);\n  font-size:26px;\n`\n\nconst EditButton = styled.button `\npadding: 10px;\nmargin-left: 20px;\nborder: none;\nborder-radius: 6px;\nbackground: ${props => props.theme.primary_colors.light_black};\ncolor:  ${props => props.theme.primary_colors.green};\ntransform: background 0.1s, color 0.1s;\n\n&:hover {\n  background: white;\n  color: black;\n}\n`\n\nexport default function NewPostPage() {\n  const {id} = useParams()\n  const dispatch = useDispatch()\n  const post = useSelector(store => store.posts.post)\n  const userData = useSelector(store => store.users.userData)\n\n  useEffect(() => {\n    dispatch(getPost(id))\n    return () => {dispatch(setPost([]))}\n  }, [id, dispatch]) //dispatch 重新 run 時 re-render\n\n  if(post.length === 0) {\n    return (\n      <Loading />\n    )\n  }\n\n  return (\n    <SinglePostContainer>\n      <TitleContainer>\n        <Title>{post[0].title}</Title>\n        <TitleRightContainer>\n          <CreatedAt>{new Date(post[0].createdAt).toLocaleTimeString()}</CreatedAt>\n          { userData && <Link to={`/edit-post/${id}`}><EditButton>Edit</EditButton></Link> }\n        </TitleRightContainer>\n      </TitleContainer>\n      <Body>{post[0].body}</Body>\n    </SinglePostContainer>\n  )\n}\n","import { useState } from 'react'\r\nimport { register } from '../WebAPI'\r\nimport { deleteAuthTokenFromLocalStorage, setAuthTokenToLocalStorage } from '../utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { getUserData } from '../redux/reducers/userReducer'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function useHandleRegister() {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [nickname, setNickname] = useState('')\r\n  const [errorMessage, setErrormessage] = useState('')\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleRegister = (event) => {\r\n    setErrormessage(null)\r\n    event.preventDefault()\r\n    register(username, password, nickname)\r\n    .then(response => {\r\n      if(response.ok !== 1) {\r\n        return setErrormessage(response.message)\r\n      }\r\n      deleteAuthTokenFromLocalStorage()\r\n      setAuthTokenToLocalStorage(response.token)\r\n      dispatch(getUserData(response.token))\r\n      .then(result => {\r\n        if(result){\r\n          return setErrormessage(result.toString())\r\n        }\r\n        history.push('/')\r\n      })\r\n    })\r\n  }\r\n\r\n  return {\r\n    username,\r\n    setUsername,\r\n    password,\r\n    setPassword,\r\n    nickname,\r\n    setNickname,\r\n    errorMessage,\r\n    setErrormessage,\r\n    handleRegister\r\n  }\r\n}","import React from 'react'\nimport {\n  ErrorMessage,\n  Container,\n  Form,\n  InputContainer,\n  Button,\n  UserInput\n} from '../../components/Form'\nimport useHandleRegister from '../../hooks/useHandleRegister'\n\nexport default function RegisterPage() {\n  const {\n    username,\n    setUsername,\n    password,\n    setPassword,\n    nickname,\n    setNickname,\n    errorMessage,\n    handleRegister\n  } = useHandleRegister()\n\n  return (\n    <Container>\n      <Form onSubmit={handleRegister}>\n        <InputContainer>\n          username:{' '}\n          <UserInput type='text' value={username} onChange={(e) => setUsername(e.target.value)}></UserInput>\n        </InputContainer>\n        <InputContainer>\n          password:{' '}\n          <UserInput type='password' value={password} onChange={(e) => setPassword(e.target.value)}></UserInput>\n        </InputContainer>\n        <InputContainer>\n          nickname:{' '}\n          <UserInput type='text' value={nickname} onChange={(e) => setNickname(e.target.value)}></UserInput>\n        </InputContainer>\n        <Button>註冊</Button>\n      </Form>\n      { errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage> }\n    </Container>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { patchPost, getPost } from '../../redux/reducers/postReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setPost } from '../../redux/reducers/postReducer'\nimport {\n  NewPostContainer,\n  Section,\n  Input,\n  Textarea,\n  Button,\n  ErrorMessage\n} from '../../components/Form'\nimport Loading from '../../components/Loading'\n\nexport default function EditPostPage() {\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const {id} = useParams()\n  const post = useSelector(store => store.posts.post)\n\n  function handleSubmit() {\n    if(title === '' || body === '') {\n      return setErrorMessage('請輸入資料')\n    }\n    dispatch(patchPost(id, {title, body})) //return promise\n    .then(response => {\n      if(response.ok !== 1) {\n        setErrorMessage(response.message)\n      }\n      history.goBack()\n    })\n  }\n\n  useEffect(() => {\n    dispatch(getPost(id))\n    return () => {dispatch(setPost([]))}\n  }, [id, dispatch])\n\n  if(post.length === 0) {\n    return <Loading />\n  }\n\n  return (\n    <NewPostContainer>\n      <Section>\n        <h2>主題</h2>\n        <Input value={title} onChange={(event) => {setTitle(event.target.value)}} placeholder={post.length !== 0 ? post[0].title : ''}></Input>\n      </Section>\n      <Section>\n        <h2>內容</h2>\n        <Textarea value={body} onChange={(event) => {setBody(event.target.value)}} placeholder={post.length !== 0 ? post[0].body : ''} rows='4'></Textarea>\n      </Section>\n      <Button onClick={handleSubmit}>Submit</Button>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n    </NewPostContainer>\n  )\n}\n","import React from 'react'\nimport AllPosts from '../../components/AllPosts'\n\nexport default function HomePage() {\n  return (\n    <AllPosts />\n  )\n}\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Link,\n  useLocation,\n  useHistory\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setAuthTokenResponse, setUserData } from '../../redux/reducers/userReducer'\nimport { deleteAuthTokenFromLocalStorage } from '../../utils'\n\nconst HeaderContainer =styled.div `\n  position: fixed;\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  right: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  padding: 0px, 30px;\n  background: ${props => props.theme.primary_colors.black};\n  box-shadow: 0.2px 0.2px 0.3px;\n  z-index: 2;\n`\n\nconst Brand = styled.div `\n  margin-left: 20px;\n  font-size: 32px;\n  font-weight: bold;\n  text-decoration: none;\n  color: ${props => props.theme.primary_colors.green};\n`\n\nconst NavbarList = styled.div `\n  display: flex;\n  align-items: center;\n`\n\nconst Nav = styled(Link) ` \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  padding: 10px 15px;\n  cursor: pointer;\n  border-radius: 10px;\n  color: ${props => props.theme.primary_colors.green};\n  font-weight: bold;\n  text-decoration: none;\n  transition: font-size 0.3s, background 0.3s;\n  margin-right: 10px;\n\n  &:hover {\n    font-size:18px\n  }\n\n  ${(props) => \n    props.$active && `background: ${props.theme.primary_colors.light_black};`\n  }\n`\n\nconst LeftContainer = styled.div `\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 32px;\n  }\n`\n\nexport default function Header() {\n  const location = useLocation()\n  const history = useHistory()\n  const userData = useSelector(store => store.users.userData)\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(setUserData(null))\n    dispatch(setAuthTokenResponse(null))\n    deleteAuthTokenFromLocalStorage()\n    history.push('/')\n  }\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand as={Link} to='/'>Blogger</Brand>\n        <NavbarList>\n          <Nav to='/' $active={location.pathname === '/'} >首頁</Nav>\n          <Nav to='/list' $active={location.pathname === '/list'} >文章列表</Nav>\n          <Nav to='/about' $active={location.pathname === '/about'} >關於</Nav>\n          { userData && <Nav to='/new-post' $active={location.pathname === '/new-post'}>發布文章</Nav> }\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        { !userData && <Nav to='/login' $active={location.pathname === '/login'}>登入</Nav> }\n        { !userData && <Nav to='/register' $active={location.pathname === '/register'}>註冊</Nav> }\n        { userData && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavbarList>\n    </HeaderContainer>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Footer = styled.div `\nposition: fixed;\nbottom: 0px;\nwidth: 100%;\nheight: 50px;\nfont-size: 16px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: ${props => props.theme.primary_colors.black};\nz-index: 3;\ncolor: ${props => props.theme.primary_colors.green};\n`\n","import React, { useState, useLayoutEffect } from 'react'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport HomePage from '../../pages/HomePage'\nimport AboutPage from '../../pages/AboutPage'\nimport LoginPage from '../../pages/LoginPage'\nimport NewPostPage from '../../pages/NewPostPage'\nimport SinglePostPage from '../../pages/SinglePostPage'\nimport RegisterPage from '../../pages/RegisterPage'\nimport EditPostPage from '../../pages/EditPostPage'\nimport ListPage from '../../pages/ListPage'\nimport Header from '../Header'\nimport { Footer } from '../Footer'\nimport { getMe } from '../../WebAPI'\nimport { useDispatch } from 'react-redux';\nimport { setUserData } from '../../redux/reducers/userReducer';\nimport { getAuthTokenFromLocalStorage } from '../../utils'\nimport styled from 'styled-components';\n\nconst Container = styled.div `\n  min-height: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding-top: 64px;\n  padding-bottom: 50px;\n  background: ${props => props.theme.primary_colors.green};\n`\n\nexport default function App() {\n  const [isLoadinGetMe, setIsLoadinGetMe] = useState(false)\n  const dispatch = useDispatch()\n\n  useLayoutEffect(() => {\n    if(localStorage.getItem('token')) {\n      const token = getAuthTokenFromLocalStorage()\n      setIsLoadinGetMe(true)\n      getMe(token)\n      .then(response => {\n        if(response.ok !== 1) {\n          return console.log(response)\n        }\n        dispatch(setUserData(response.data))\n        setIsLoadinGetMe(false)\n      })\n    }\n  }, [dispatch])\n\n  return (\n    <Router>\n      {!isLoadinGetMe && (\n        <>\n          <Header />\n          <Switch>\n            <Container>\n              <Route exact path='/'> \n                <HomePage/>\n              </Route>\n              <Route path='/list'> \n                <ListPage />\n              </Route>\n              <Route path='/about'> \n                <AboutPage />\n              </Route>\n              <Route path='/new-post'> \n                <NewPostPage />\n              </Route>\n              <Route path='/edit-post/:id'> \n                <EditPostPage />\n              </Route>\n              <Route path='/login'>\n                <LoginPage />\n              </Route>\n              <Route path='/posts/:id'>\n                <SinglePostPage />\n              </Route>\n              <Route path='/register'>\n                <RegisterPage />\n              </Route>\n            </Container>\n          </Switch>\n          <Footer>Made by Ian!</Footer>\n        </>\n      )}\n    </Router>\n  )\n}","import { configureStore } from '@reduxjs/toolkit';\nimport  postReducer from './reducers/postReducer';\nimport userReducer from './reducers/userReducer';\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n    users: userReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nconst theme = {\n  colors : {\n    light_gray : '#D0D0D0',\n    black : '#d40202',\n  },\n\n  primary_colors : {\n    black: '#2f0e17',\n    green: '#d1f7ea',\n    light_black : '#747171',\n    dim_green : '#8b938f',\n  },\n\n  fontSizes : {\n    h1 : '4.5rem',\n    h2 : '3.5rem',\n    h3 : '2.3rem',\n    h4 : '1.8rem',\n    h5 : '1.6rem',\n    h6 : '1.3rem'\n  }\n}\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}