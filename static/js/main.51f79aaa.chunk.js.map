{"version":3,"sources":["utils.js","WebAPI.js","redux/reducers/postReducer.js","components/SelectedPosts/Post.js","components/Loading/Loading.js","components/SelectedPosts/SelectedPosts.js","pages/HomePage/HomePage.js","pages/AboutPage/AboutPage.js","components/Form/Form.js","redux/reducers/userReducer.js","pages/LoginPage/LoginPage.js","hooks/useHandleLogin.js","pages/NewPostPage/NewPostPage.js","hook.js","pages/SinglePostPage/SinglePostPage.js","hooks/useHandleRegister.js","pages/RegisterPage/RegisterPage.js","pages/EditPostPage/EditPostPage.js","components/AllPosts/Post.js","components/AllPosts/AllPosts.js","pages/ListPage/ListPage.js","components/Header/Header.js","components/Footer/Footer.js","components/App/App.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthTokenToLocalStorage","token","localStorage","setItem","JSON","stringify","getAuthTokenFromLocalStorage","parse","getItem","deleteAuthTokenFromLocalStorage","removeItem","BASE_URL","getPosts","fetch","then","res","json","getMe","headers","deletePostById","event","id","Number","target","getAttribute","method","postReducer","createSlice","name","initialState","isLoadingPost","isLoadingNewPost","isLoadingPatchedPost","post","posts","selectedPosts","newPostResponse","patchPostResponse","reducers","setIsLoadingPost","state","action","payload","setIsLoadingNewPost","setIsLoadingPatchedPost","setPost","setPosts","setSelectedPosts","setNewPostResponse","setPatchPostResponse","actions","getPost","dispatch","getPostsById","catch","error","console","log","toString","getSelectedPosts","data","limit","page","getPostsByLimit","deletePost","a","lot","createPost","title","body","submitPost","response","patchPost","patchPostById","PostContainer","styled","div","PostTitle","Link","PostDate","DeleteButton","button","EditButton","PostRightContainer","Post","useDispatch","userData","useSelector","store","users","to","Date","createdAt","toLocaleDateString","onClick","Section","section","props","theme","colors","light_gray","fontSizes","h3","Loading","Container","PostsContainer","PageControlerContainer","ul","Page","li","PageControler","setCurrentPage","useState","paginateArray","setPaginateArray","useEffect","length","pagesNumber","parseInt","array","i","push","SelectedPosts","map","index","handleSwitchPage","currentPage","HomePage","Banner","Body","AboutPage","ErrorMessage","Form","form","InputContainer","Button","NewPostContainer","Input","input","Textarea","textarea","userReducer","isLoadingAuthToken","authTokenResponse","setIsLoadingAuthToken","setAuthTokenResponse","setUserData","getAuthToken","loginData","username","password","login","getUserData","ok","message","LoginPage","setUsername","setPassword","errorMessage","setErrormessage","history","useHistory","handleLogin","preventDefault","result","useHandleLogin","onSubmit","type","value","onChange","e","NewPostPage","setTitle","setBody","setErrorMessage","prevIsLoadingNewPost","ref","useRef","current","usePrevious","rows","SinglePostContainer","TitleContainer","TitleRightContainer","Title","CreatedAt","useParams","toLocaleTimeString","useHandleRegister","nickname","setNickname","handleRegister","register","RegisterPage","EditPostPage","placeholder","goBack","AllPosts","allPosts","HeaderContainer","Brand","NavbarList","Nav","$active","LeftContainer","Header","location","useLocation","as","pathname","Footer","App","isLoadinGetMe","setIsLoadinGetMe","useLayoutEffect","exact","path","configureStore","reducer","ReactDOM","render","black","h1","h2","h4","h5","h6","document","getElementById"],"mappings":"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","file":"static/js/main.51f79aaa.chunk.js","sourcesContent":["const TOKEN_NAME = 'token'\r\n\r\nexport const setAuthTokenToLocalStorage = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, JSON.stringify(token))\r\n}\r\n\r\nexport const getAuthTokenFromLocalStorage = () => {\r\n  return JSON.parse(localStorage.getItem(TOKEN_NAME))\r\n}\r\n\r\nexport const deleteAuthTokenFromLocalStorage = () => {\r\n  return localStorage.removeItem('token')\r\n}\r\n\r\n","import { getAuthTokenFromLocalStorage } from './utils'\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=id&_order=desc`).then((res) => res.json())\r\n}\r\n\r\nexport const getPostsById = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json())\r\n}\r\n\r\nexport const getPostsByLimit = (limit, page) => {\r\n  return fetch(`${BASE_URL}/posts?_limit=${limit}&_page=${page}&_sort=id&_order=desc`).then((res) => res.json())\r\n}\r\n\r\nexport const login = (userData) => {\r\n  const username = userData.username\r\n  const password = userData.password\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const register = (username, password, nickname) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const getMe = (token) => {\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      'authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const submitPost = (data) => {\r\n  const token = getAuthTokenFromLocalStorage()\r\n  const title = data.title\r\n  const body = data.body\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const deletePostById = (event) => {\r\n  const id = Number(event.target.getAttribute('id'))\r\n  const token = getAuthTokenFromLocalStorage()\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\nexport const patchPostById = (id, data) => {\r\n  const token = getAuthTokenFromLocalStorage()\r\n  const title = data.title\r\n  const body = data.body\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    })\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\nimport { getPostsById, getPosts, deletePostById, submitPost, patchPostById, getPostsByLimit } from '../../WebAPI'\n\nexport const postReducer = createSlice({\n  name: 'posts',\n  initialState: {\n    isLoadingPost : false,\n    isLoadingNewPost : false,\n    isLoadingPatchedPost : false,\n    post : [],\n    posts : [],\n    selectedPosts : [],\n    newPostResponse : null,\n    patchPostResponse : null,\n  },\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload\n    },\n\n    setIsLoadingNewPost: (state, action) => {\n      state.isLoadingNewPost = action.payload\n    },\n\n    setIsLoadingPatchedPost: (state, action) => {\n      state.isLoadingNewPost = action.payload\n    },\n\n    setPost: (state, action) => {\n      state.post = action.payload\n    },\n\n    setPosts: (state, action) => {\n      state.posts = action.payload\n    },\n\n    setSelectedPosts: (state, action) => {\n      state.selectedPosts = action.payload\n    },\n\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload\n    },\n\n    setPatchPostResponse: (state, action) => {\n      state.patchPostResponse = action.payload\n    }\n  },\n});\n\nexport const { \n  setIsLoadingPost, \n  setIsLoadingNewPost,\n  setIsLoadingPatchedPost,\n  setPost, \n  setPosts, \n  setSelectedPosts,\n  setNewPostResponse,\n  setPatchPostResponse\n} = postReducer.actions;\n\n//redux-thunk\nexport const getPost = (id) => (dispatch) => { \n  dispatch(setIsLoadingPost(true))\n  getPostsById(id)\n  .then(res => {\n    dispatch(setPost(res))\n    dispatch(setIsLoadingPost(false))\n  })\n  .catch(error => {\n    console.log(error.toString())\n  })\n};\n\nexport const getAllPosts = () => (dispatch) => { \n  dispatch(setIsLoadingPost(true))\n  getPosts()\n  .then(res => {\n    dispatch(setPosts(res))\n    dispatch(setIsLoadingPost(false))\n  })\n  .catch(error => {\n    console.log(error.toString())\n  })\n};\n\nexport const getSelectedPosts = (data) => (dispatch) => { \n  const limit = data.limit\n  const page = data.page\n  dispatch(setIsLoadingPost(true))\n  getPostsByLimit(limit, page)\n  .then(res => {\n    dispatch(setSelectedPosts(res))\n    dispatch(setIsLoadingPost(false))\n  })\n  .catch(error => {\n    console.log(error.toString())\n  })\n};\n\nexport const deletePost = (event) => async (dispatch) => { \n  await deletePostById(event)\n  .then(() => {\n    console.lot('delete success')\n  })\n  .catch(error => {\n    console.log(error.toString())\n  })\n  dispatch(setIsLoadingPost(true))\n  getPosts()\n  .then(res => {\n    dispatch(setPosts(res))\n    dispatch(setIsLoadingPost(false))\n  })\n  .catch(error => {\n    console.log(error.toString())\n  })\n};\n\nexport const createPost = (data) => (dispatch) => {\n  dispatch(setIsLoadingNewPost(true))\n  return submitPost(data)\n  .then(response => {\n    dispatch(setNewPostResponse(response))\n    dispatch(setIsLoadingNewPost(false))\n    return response\n  })\n}\n\nexport const patchPost = (id, data) => (dispatch) => {\n  dispatch(setIsLoadingPatchedPost(true))\n  return patchPostById(id, data)\n  .then(response => {\n    dispatch(setPatchPostResponse(response))\n    dispatch(setIsLoadingPatchedPost(false))\n    return response\n  })\n}\n\nexport default postReducer.reducer; \n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deletePost } from '../../redux/reducers/postReducer'\n\nconst PostContainer = styled.div `\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n\n  &:hover {\n    box-shadow: 0.5px 0.5px 2px 0px ;\n  }\n`\n\nconst PostTitle = styled(Link) `\n  font-size: 24px;\n  text-decoration: none;\n  color: #333;\n`\n\nconst PostDate = styled.div `\n  color: rgba(0, 0, 0, 0.8);\n`\n\nconst DeleteButton = styled.button `\n  padding: 10px;\n  margin-left: 20px;\n  border: none;\n`\n\nconst EditButton = styled.button `\n  padding: 10px;\n  margin-left: 20px;\n  border: none;\n`\n\nconst PostRightContainer = styled.div `\n  display: flex;\n`\n\nexport default function Post({post}) {\n  const dispatch = useDispatch()\n  const userData = useSelector(store => store.users.userData)\n\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.id}{\" . \"}{post.title}</PostTitle>\n      <PostRightContainer>\n        <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\n        { userData && <DeleteButton onClick={(event) => dispatch(deletePost(event)) } id={post.id}>Delete</DeleteButton> }\n        { userData && <Link to={`/edit-post/${post.id}`}><EditButton>Edit</EditButton></Link> }\n      </PostRightContainer>\n    </PostContainer>\n  )\n}\n\nPost.propTypes = {\n  post: PropTypes.object\n}\n\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Section = styled.section `\n  background: ${props => props.theme.colors.light_gray};\n  box-sizing: border-box;\n  position: relative;\n  witdh: 100%;\n  min-height: 100%;\n  padding-top: 64px;\n  padding-bottom: 50px;\n  text-align: center;\n  font-size: ${props => props.theme.fontSizes.h3};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 0;\n`\n\nexport default function Loading() {\n\n  return (\n    <Section>Is Loading!</Section>\n  )\n}\n\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSelectedPosts } from '../../redux/reducers/postReducer'\nimport Post from './Post'\nimport Loading from \"../Loading\"\nimport { getPosts } from \"../../WebAPI\"\n\nconst Container = styled.div `\n  position: relative;\n  min-height: 100%\n  box-sizing: border-box;\n  padding-top: 64px;\n  padding-bottom: 100px;\n  z-index-1;\n  width: 80%;\n  margin: 0 auto;\n`\n\nconst PostsContainer = styled.div `\n  margin-top: 30px;\n  outline: solid rgb(0,0,0,0.2) 0.5px;\n`\n\nconst PageControlerContainer = styled.ul `\n  margin: 20px auto;\n  width: 100px;\n  display: flex;\n  justify-content: space-around;\n  list-style-type: none;\n`\n\nconst Page = styled.li `\n  font-size: 20px;\n  cursor: pointer;\n`\n\nfunction PageControler({setCurrentPage, limit}) {\n  const [paginateArray, setPaginateArray] = useState([])\n\n  useEffect(() => {\n    getPosts()\n    .then(res => {\n      const length = res.length\n      const pagesNumber = length%limit? parseInt(length/limit)+1 : parseInt(length/limit)\n      const array = []\n      for(let i=1; i<=pagesNumber; i++) {\n        array.push(i)\n      }\n      setPaginateArray(array)\n    })\n  }, [SelectedPosts])\n\n  function handleSwitchPage(page) {\n    setCurrentPage(page)\n  }\n\n  return (\n    <PageControlerContainer>\n        {\n          paginateArray.map((page,index) => <Page onClick={() => handleSwitchPage(page)} key={index}>{page}</Page>)\n        }\n    </PageControlerContainer>\n  )\n}\n\nexport default function SelectedPosts() {\n  const [currentPage, setCurrentPage] = useState(1)\n  const dispatch = useDispatch()\n  const selectedPosts = useSelector(store => store.posts.selectedPosts)\n  const posts = useSelector(store => store.posts.posts)\n  const limit = 8\n  \n  useEffect(() => {\n    dispatch(getSelectedPosts({\n      limit,\n      page: currentPage,\n    }))\n  }, [dispatch, currentPage, posts])\n\n  if(selectedPosts.length === 0){\n    return ( \n      <Loading />\n    )\n  }\n\n  return (\n    <Container>\n      <PostsContainer>\n        { selectedPosts.map(post => \n          <Post post={post} key={post.id}></Post>)\n        }\n      </PostsContainer>\n      <PageControler setCurrentPage={setCurrentPage} limit={limit}/>\n    </Container>\n  )\n}\n\n","import React from \"react\"\nimport SelectedPosts from '../../components/SelectedPosts'\n\nexport default function HomePage() {\n  return (\n    <SelectedPosts />\n  )\n}\n\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div `\n  min-height: 100;\n  padding-top: 64px;\n  padding-bottom: 64px;\n  box-sizing: border-box;\n  top: -64px;\n`\n\nconst Banner = styled.div `\n  background: rgb(0,0,0,0.1);\n  width: 100vw;\n  height: 120px;\n  text-align: center;\n  font-size: 32px;\n  vertical-align: baseline;\n  padding-top: 60px;\n`\n\nconst Body = styled.div `\n  font-size: 26px;\n  text-align: center;\n  margin-top: 80px;\n`\n\n\nexport default function AboutPage() {\n\n  return (\n    <Container>\n      <Banner>關於我們</Banner>\n      <Body>這是一個大家集體創作的部落格。<br />\n      你可以在這邊自由註冊、發文並觀看別人的文章。<br/>\n      enjoy writting!\n      </Body>\n    </Container>\n  )\n}\n","import styled from \"styled-components\"\n\n//login && register\nexport const ErrorMessage = styled.div `\n  color: red;\n  position: relative;\n  text-align: center;\n`\n\nexport const Container = styled.div `\n  box-sizing: border-box;\n  min-height: 100%;\n  padding-top: 64px;\n  padding-bottom: 50px;\n`\n\nexport const Form = styled.form `\n  margin-top: 50px;\n  position: relative;\n  left: 50%;\n  transform: translate(-50%,0px);\n  width: 30vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: white;\n  border-radius: 5px;\n  border: solid 0.5px rgb(0,0,0,0.2);\n`\n\nexport const InputContainer = styled.div `\n  padding-top: 10px;\n  padding-bottom: 10px;\n`\n\nexport const Button = styled.button `\n  padding: 6px 10px;\n  border: none;\n  border-radius: 2px;\n  background: rgb(0,0,0,0.15);\n  font-size: 20px;\n  position: relative;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`\n\n//editPost && newPost\nexport const NewPostContainer = styled.div `\n  height: 70%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  &:nth-child(3) {\n    width:100px;\n  }\n`\n\nexport const Section = styled.div `\n  display: block;\n  width: 90vw;\n`\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 40px;\n  border: solid 0.1px rgb(0,0,0,0.2);\n  border-radius: 3px;\n  font-size:20px;\n`\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  border: solid 0.1px rgb(0,0,0,0.2);\n  border-radius: 3px;\n  font-size:20px;\n`\n","import { createSlice } from '@reduxjs/toolkit';\nimport { login, getMe } from '../../WebAPI'\nimport { deleteAuthTokenFromLocalStorage } from '../../utils'\n\nexport const userReducer = createSlice({\n  name: 'users',\n  initialState: {\n    isLoadingAuthToken: false,\n    authTokenResponse: null,\n    userData: null,\n  },\n  reducers: {\n    setIsLoadingAuthToken: (state, action) => {\n      state.isLoadingAuthToken = action.payload\n    },\n    setAuthTokenResponse: (state, action) => {\n      state.authTokenResponse = action.payload\n    },\n    setUserData: (state, action) => {\n      state.userData = action.payload\n    }\n  },\n});\n\nexport const { \n  setIsLoadingAuthToken,\n  setAuthTokenResponse,\n  setUserData\n} = userReducer.actions;\n\n//redux-thunk\nexport const getAuthToken = (loginData) => (dispatch) => { \n  dispatch(setIsLoadingAuthToken(true))\n  return login(loginData)\n  .then(response => {\n    dispatch(setAuthTokenResponse(response))\n    dispatch(setIsLoadingAuthToken(false))\n    return response\n  })\n};\n\nexport const getUserData = (token) => (dispatch) => {\n  return getMe(token)\n  .then(response => {\n    if(response.ok !== 1) {\n      deleteAuthTokenFromLocalStorage()\n      return response.message\n    }\n    dispatch(setUserData(response.data))\n  })\n}\n\n\nexport default userReducer.reducer; \n","import React from \"react\"\nimport {\n  ErrorMessage,\n  Container,\n  Form,\n  InputContainer,\n  Button,\n} from '../../components/Form'\nimport useHandleLogin from \"../../hooks/useHandleLogin\"\n\nexport default function LoginPage() {\n  const {\n    username,\n    setUsername,\n    password,\n    setPassword,\n    errorMessage,\n    setErrormessage,\n    handleLogin\n  } = useHandleLogin()\n\n  return (\n    <Container>\n      <Form onSubmit={handleLogin}>\n        <InputContainer>\n          username:{\" \"}\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)}></input>\n        </InputContainer>\n        <InputContainer>\n          password:{\" \"}\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}></input>\n        </InputContainer>\n        <Button>登入</Button>\n      </Form>\n      { errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage> }\n    </Container>\n  )\n}","import { useState } from \"react\"\r\nimport { setAuthTokenToLocalStorage } from '../utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { getAuthToken, getUserData } from '../redux/reducers/userReducer'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function useHandleLogin() {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrormessage] = useState('')\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogin = (event) => {\r\n    setErrormessage(null) \r\n    event.preventDefault()\r\n    if(!username || !password){\r\n      return setErrormessage('請輸入相關資訊')\r\n    }\r\n    dispatch(getAuthToken({username, password}))\r\n    .then(response => {\r\n      if(response.ok !== 1) {\r\n        setErrormessage(response.message)\r\n      }\r\n      setAuthTokenToLocalStorage(response.token)\r\n      dispatch(getUserData(response.token))\r\n      .then(result => {\r\n        if(result){\r\n          return setErrormessage(result.toString())\r\n        }\r\n        history.push('/')\r\n      })\r\n    })\r\n  }\r\n\r\n  return {\r\n    username,\r\n    setUsername,\r\n    password,\r\n    setPassword,\r\n    errorMessage,\r\n    setErrormessage,\r\n    handleLogin\r\n  }\r\n}","import React, { useEffect, useState } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { createPost } from '../../redux/reducers/postReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport usePrevious from '../../hook'\nimport {\n  NewPostContainer,\n  Section,\n  Input,\n  Textarea,\n  Button,\n  ErrorMessage\n} from '../../components/Form'\n\nexport default function NewPostPage() {\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const isLoadingNewPost = useSelector(store => store.posts.isLoadingNewPost)\n  const newPostResponse = useSelector(store => store.posts.newPostResponse)\n  const prevIsLoadingNewPost = usePrevious(isLoadingNewPost)\n\n  function handleSubmit() {\n    if(title === '' || body === '') {\n      return setErrorMessage('請輸入資料')\n    }\n    dispatch(createPost({title, body})) //return promise\n  }\n\n  // 1. request 之前，isLoadingNewPost: false , prevIsLoadingNewPost: false\n  // 2. request 時，isLoadingNewPost: true , prevIsLoadingNewPost: false\n  // 3. request 後，isLoadingNewPost: false , prevIsLoadingNewPost: true\n\n  useEffect(() => { //方法三，用 state 來判斷\n    if(!isLoadingNewPost && prevIsLoadingNewPost)\n    if(newPostResponse && newPostResponse.id) {\n      history.push('./posts/'+ newPostResponse.id)\n    }\n  }, [newPostResponse, history, isLoadingNewPost, prevIsLoadingNewPost])\n\n  // useEffect(() => { //方法一，再下一次進來前清空 newpostresponse\n  //   return dispatch(setNewPostResponse(null))\n  // }, [])\n\n  // useEffect(() => { //會有一個 side effect 之後進來 newPostResponse 還在，會導向該文章\n  //   if(newPostResponse && newPostResponse.id) {\n  //     history.push('./posts/'+ newPostResponse.id)\n  //   }\n  // }, [newPostResponse, history])\n\n  return (\n    <NewPostContainer>\n      <Section>\n        <h2>Title</h2>\n        <Input value={title} onChange={(event) => {setTitle(event.target.value)}}></Input>\n      </Section>\n      <Section>\n        <h2>Body</h2>\n        <Textarea value={body} onChange={(event) => {setBody(event.target.value)}} rows=\"4\"></Textarea>\n      </Section>\n      <Button onClick={handleSubmit}>Submit</Button>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n    </NewPostContainer>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\r\n\r\n// usePrevious\r\nexport default function usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef();\r\n  \r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n  \r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}","import React, { useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport { useParams } from \"react-router-dom\"\nimport { getPost, setPost } from '../../redux/reducers/postReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loading from \"../../components/Loading\"\nimport { Link } from 'react-router-dom'\n\n\nNewPostPage.propTypes = {\n  post: PropTypes.object\n}\n\nconst SinglePostContainer = styled.div `\n  height: 100%;\n  box-sizing: border-box;\n  padding-top: 64px;\n  padding-bottom: 50px;\n  width: 70vw;\n  margin: 0 auto;\n`\n\nconst TitleContainer = styled.div `\n  margin-top: 30px;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst TitleRightContainer = styled.div `\n  display: flex;\n`\n\nconst Title = styled.div `\n  font-weight: bold;\n  font-size: 26px;\n  vertical-align: baseline;\n`\n\nconst CreatedAt = styled.div `\n  font-size: 20px;\n  color: rgb(0,0,0,0.6);\n`\n\nconst Body = styled.div `\n  margin-top: 10px;\n  padding-top: 20px;\n  border-top: solid 0.5px rgb(0,0,0,0.3);\n  font-size:26px;\n`\n\nconst EditButton = styled.button `\n  padding: 10px;\n  margin-left: 20px;\n  border: none;\n`\n\nexport default function NewPostPage() {\n  const {id} = useParams()\n  const dispatch = useDispatch()\n  const post = useSelector(store => store.posts.post)\n  const userData = useSelector(store => store.users.userData)\n\n  useEffect(() => {\n    dispatch(getPost(id))\n    return () => {dispatch(setPost([]))}\n  }, [id, dispatch]) //dispatch 重新 run 時 re-render\n\n  if(post.length === 0) {\n    return (\n      <Loading />\n    )\n  }\n\n  return (\n    <SinglePostContainer>\n      <TitleContainer>\n        <Title>{post[0].title}</Title>\n        <TitleRightContainer>\n          <CreatedAt>{new Date(post[0].createdAt).toLocaleTimeString()}</CreatedAt>\n          { userData && <Link to={`/edit-post/${id}`}><EditButton>Edit</EditButton></Link> }\n        </TitleRightContainer>\n      </TitleContainer>\n      <Body>{post[0].body}</Body>\n    </SinglePostContainer>\n  )\n}\n","import { useState } from \"react\"\r\nimport { register } from '../WebAPI'\r\nimport { deleteAuthTokenFromLocalStorage, setAuthTokenToLocalStorage } from '../utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { getUserData } from \"../redux/reducers/userReducer\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nexport default function useHandleRegister() {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [nickname, setNickname] = useState('')\r\n  const [errorMessage, setErrormessage] = useState('')\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleRegister = (event) => {\r\n    setErrormessage(null)\r\n    event.preventDefault()\r\n    register(username, password, nickname)\r\n    .then(response => {\r\n      if(response.ok !== 1) {\r\n        return setErrormessage(response.message)\r\n      }\r\n      deleteAuthTokenFromLocalStorage()\r\n      setAuthTokenToLocalStorage(response.token)\r\n      dispatch(getUserData(response.token))\r\n      .then(result => {\r\n        if(result){\r\n          return setErrormessage(result.toString())\r\n        }\r\n        history.push('/')\r\n      })\r\n    })\r\n  }\r\n\r\n  return {\r\n    username,\r\n    setUsername,\r\n    password,\r\n    setPassword,\r\n    nickname,\r\n    setNickname,\r\n    errorMessage,\r\n    setErrormessage,\r\n    handleRegister\r\n  }\r\n}","import React from \"react\"\nimport {\n  ErrorMessage,\n  Container,\n  Form,\n  InputContainer,\n  Button,\n} from '../../components/Form'\nimport useHandleRegister from \"../../hooks/useHandleRegister\"\n\nexport default function RegisterPage() {\n  const {\n    username,\n    setUsername,\n    password,\n    setPassword,\n    nickname,\n    setNickname,\n    errorMessage,\n    setErrormessage,\n    handleRegister\n  } = useHandleRegister()\n\n  return (\n    <Container>\n      <Form onSubmit={handleRegister}>\n        <InputContainer>\n          username:{\" \"}\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)}></input>\n        </InputContainer>\n        <InputContainer>\n          password:{\" \"}\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}></input>\n        </InputContainer>\n        <InputContainer>\n          nickname:{\" \"}\n          <input type=\"text\" value={nickname} onChange={(e) => setNickname(e.target.value)}></input>\n        </InputContainer>\n        <Button>註冊</Button>\n      </Form>\n      { errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage> }\n    </Container>\n  )\n}","import React, { useEffect, useState } from \"react\"\nimport { useHistory, useParams } from 'react-router-dom'\nimport { patchPost, getPost } from '../../redux/reducers/postReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setPost } from '../../redux/reducers/postReducer'\nimport {\n  NewPostContainer,\n  Section,\n  Input,\n  Textarea,\n  Button,\n  ErrorMessage\n} from '../../components/Form'\nimport Loading from \"../../components/Loading\"\n\nexport default function EditPostPage() {\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const {id} = useParams()\n  const post = useSelector(store => store.posts.post)\n\n  function handleSubmit() {\n    if(title === '' || body === '') {\n      return setErrorMessage('請輸入資料')\n    }\n    dispatch(patchPost(id, {title, body})) //return promise\n    .then(response => {\n      if(response.ok !== 1) {\n        setErrorMessage(response.message)\n      }\n      history.goBack()\n    })\n  }\n\n  useEffect(() => {\n    dispatch(getPost(id))\n    return () => {dispatch(setPost([]))}\n  }, [id, dispatch])\n\n  if(post.length === 0) {\n    return <Loading />\n  }\n\n  return (\n    <NewPostContainer>\n      <Section>\n        <h2>Title</h2>\n        <Input value={title} onChange={(event) => {setTitle(event.target.value)}} placeholder={post.length !== 0 ? post[0].title : \"\"}></Input>\n      </Section>\n      <Section>\n        <h2>Body</h2>\n        <Textarea value={body} onChange={(event) => {setBody(event.target.value)}} placeholder={post.length !== 0 ? post[0].body : \"\"} rows=\"4\"></Textarea>\n      </Section>\n      <Button onClick={handleSubmit}>Submit</Button>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n    </NewPostContainer>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deletePost } from '../../redux/reducers/postReducer'\n\nconst PostContainer = styled.div `\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n\n  &:hover {\n    box-shadow: 0.5px 0.5px 2px 0px ;\n  }\n`\n\nconst PostTitle = styled(Link) `\n  font-size: 24px;\n  text-decoration: none;\n  color: #333;\n`\n\nconst PostDate = styled.div `\n  color: rgba(0, 0, 0, 0.8);\n`\n\nconst DeleteButton = styled.button `\n  padding: 10px;\n  margin-left: 20px;\n  border: none;\n`\n\nconst EditButton = styled.button `\n  padding: 10px;\n  margin-left: 20px;\n  border: none;\n`\n\nconst PostRightContainer = styled.div `\n  display: flex;\n`\n\nexport default function Post({post}) {\n  const dispatch = useDispatch()\n  const userData = useSelector(store => store.users.userData)\n\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.id}{\" . \"}{post.title}</PostTitle>\n      <PostRightContainer>\n        <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\n        { userData && <DeleteButton onClick={(event) => dispatch(deletePost(event)) } id={post.id}>Delete</DeleteButton> }\n        { userData && <Link to={`/edit-post/${post.id}`}><EditButton>Edit</EditButton></Link> }\n      </PostRightContainer>\n    </PostContainer>\n  )\n}\n\nPost.propTypes = {\n  post: PropTypes.object\n}\n\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllPosts } from '../../redux/reducers/postReducer'\nimport Post from './Post'\nimport Loading from \"../Loading\"\n\nconst Container = styled.div `\n  position: relative;\n  min-height: 100%\n  box-sizing: border-box;\n  padding-top: 64px;\n  padding-bottom: 100px;\n  z-index-1;\n  width: 80%;\n  margin: 0 auto;\n`\n\nconst PostsContainer = styled.div `\n  margin-top: 30px;\n  outline: solid rgb(0,0,0,0.2) 0.5px;\n`\n\nexport default function AllPosts() {\n  const dispatch = useDispatch()\n  const allPosts = useSelector(store => store.posts.posts)\n  \n  useEffect(() => {\n    dispatch(getAllPosts())\n  }, [dispatch])\n\n  if(allPosts.length === 0){\n    return ( \n      <Loading />\n    )\n  }\n\n  return (\n    <Container>\n      <PostsContainer>\n        { allPosts.map(post => \n          <Post post={post} key={post.id}></Post>)\n        }\n      </PostsContainer>\n    </Container>\n  )\n}\n\n","import React from \"react\"\nimport AllPosts from '../../components/AllPosts'\n\nexport default function HomePage() {\n  return (\n    <AllPosts />\n  )\n}\n\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport {\n  Link,\n  useLocation,\n  useHistory\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setAuthTokenResponse, setUserData } from \"../../redux/reducers/userReducer\"\nimport { deleteAuthTokenFromLocalStorage } from '../../utils'\n\nconst HeaderContainer =styled.div `\n  position: fixed;\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  right: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  border-bottom: solid 0.1px rgb(0,0,0,0.2);\n  padding: 0px, 30px;\n  background: white;\n  box-shadow: 0.2px 0.2px 0.3px;\n  z-index: 2;\n`\n\nconst Brand = styled.div `\n  margin-left: 20px;\n  font-size: 32px;\n  font-weight: bold;\n  text-decoration: none;\n  color: black;\n`\n\nconst NavbarList = styled.div `\n  display: flex;\n  align-items: center;\n`\n\nconst Nav = styled(Link) ` \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 64px;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  transition: font-size 0.3s;\n\n  &:hover {\n    font-size:18px\n  }\n\n  ${(props) => \n    props.$active && `background: rgb(0,0,0,0.2)`\n  }\n`\n\nconst LeftContainer = styled.div `\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 32px;\n  }\n`\n\nexport default function Header() {\n  const location = useLocation()\n  const history = useHistory()\n  const userData = useSelector(store => store.users.userData)\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch(setUserData(null))\n    dispatch(setAuthTokenResponse(null))\n    deleteAuthTokenFromLocalStorage()\n    history.push('/')\n  }\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand as={Link} to='/'>大家的部落格</Brand>\n        <NavbarList>\n          <Nav to='/' $active={location.pathname === '/'} >首頁</Nav>\n          <Nav to='/list' $active={location.pathname === '/list'} >文章列表</Nav>\n          <Nav to='/about' $active={location.pathname === '/about'} >關於</Nav>\n          { userData && <Nav to='/new-post' $active={location.pathname === '/new-post'}>發布文章</Nav> }\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        { !userData && <Nav to='/login' $active={location.pathname === '/login'}>登入</Nav> }\n        { !userData && <Nav to='/register' $active={location.pathname === '/register'}>註冊</Nav> }\n        { userData && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavbarList>\n    </HeaderContainer>\n  )\n}\n","import styled from \"styled-components\"\n\nexport const Footer = styled.div `\nposition: fixed;\nbottom: 0px;\nwidth: 100%;\nheight: 50px;\nfont-size: 16px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground: ${props => props.theme.colors.light_gray};\nz-index: 3;\n`\n","import React, { useState, useLayoutEffect } from \"react\"\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport HomePage from '../../pages/HomePage'\nimport AboutPage from '../../pages/AboutPage'\nimport LoginPage from '../../pages/LoginPage'\nimport NewPostPage from '../../pages/NewPostPage'\nimport SinglePostPage from '../../pages/SinglePostPage'\nimport RegisterPage from '../../pages/RegisterPage'\nimport EditPostPage from '../../pages/EditPostPage'\nimport ListPage from '../../pages/ListPage'\nimport Header from '../Header'\nimport { Footer } from '../Footer'\nimport { getMe } from \"../../WebAPI\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUserData } from \"../../redux/reducers/userReducer\";\nimport { getAuthTokenFromLocalStorage } from '../../utils'\n\nexport default function App() {\n  const [isLoadinGetMe, setIsLoadinGetMe] = useState(false)\n  const dispatch = useDispatch()\n\n  useLayoutEffect(() => {\n    if(localStorage.getItem('token')) {\n      const token = getAuthTokenFromLocalStorage()\n      setIsLoadinGetMe(true)\n      getMe(token)\n      .then(response => {\n        if(response.ok !== 1) {\n          return console.log(response)\n        }\n        dispatch(setUserData(response.data))\n        setIsLoadinGetMe(false)\n      })\n    }\n  }, [])\n\n  return (\n    <Router>\n      {!isLoadinGetMe && (\n        <>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\"> \n              <HomePage/>\n            </Route>\n            <Route path=\"/list\"> \n              <ListPage />\n            </Route>\n            <Route path=\"/about\"> \n              <AboutPage />\n            </Route>\n            <Route path=\"/new-post\"> \n              <NewPostPage />\n            </Route>\n            <Route path=\"/edit-post/:id\"> \n              <EditPostPage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/posts/:id\">\n              <SinglePostPage />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n          </Switch>\n          <Footer>Made by Ian!</Footer>\n        </>\n      )}\n    </Router>\n  )\n}","import { configureStore } from '@reduxjs/toolkit';\nimport  postReducer from './reducers/postReducer';\nimport userReducer from './reducers/userReducer';\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n    users: userReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { ThemeProvider } from \"styled-components\";\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nconst theme = {\n  colors : {\n    light_gray : '#D0D0D0',\n    black : '#d40202',\n  },\n\n  fontSizes : {\n    h1 : '4.5rem',\n    h2 : '3.5rem',\n    h3 : '2.3rem',\n    h4 : '1.8rem',\n    h5 : '1.6rem',\n    h6 : '1.3rem'\n  }\n}\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}